version: '3'

x-airflow-common:
  &airflow-common
  build: services/airflow
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__WEBSERVER__SECRET_KEY: my_secret_key
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
  volumes:
    - ./services/airflow/dags:/opt/airflow/dags
    - ./services/airflow/logs:/opt/airflow/logs
    - ./data:/opt/airflow/data
    - ./code:/opt/airflow/code
    - ./models:/opt/airflow/models
    - /var/run/docker.sock:/var/run/docker.sock
  depends_on:
    - postgres
    - redis

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  redis:
    image: redis:6

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /opt/airflow/airflow-webserver.pid ]"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-worker:
    <<: *airflow-common
    command: celery worker

  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow db upgrade && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    environment:
      <<: *airflow-env
    depends_on:
      - postgres
      - redis

volumes:
  postgres-db-volume:
